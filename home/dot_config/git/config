[advice]
  detachedHead = false
[alias]
	ci = commit # DEPRECATED
	co = checkout # DEPRECATED

	a = !git --no-pager la -n 15
	branches = branch -a
	c = commit
	changelog = git log --oneline --no-merges
	# cleanout = !git clean -df && git checkout -- .
	# config-search = config --show-scope --show-origin --get-regexp
	# conflicts = git diff --name-only | uniq | xargs code
	# cp = cherry-pick
	# d = diff
	daylog = log --since '1 day ago' --oneline --author <johnpaul@transitionpoint.com>  # I know what you did yesterday - great for follow-ups
	# dc = diff --cached
	diff = diff --word-diff
	# ds = diff --staged      # git ds - diff your staged changes == review before committing.
	# dz = diff --color-moved=dimmed_zebra # show only-moved text in dimmed stripes
	ff = merge --ff-only
	# go = checkout
	# gob = checkout -b
	# graph = " git log --graph --all --decorate --stat --date=iso"
	# h = !git --no-pager log --graph -n 15
	identity = "! git config user.name \"$(git config user.$1.name)\"; git config user.email \"$(git config user.$1.email)\"; git config user.signingkey \"$(git config user.$1.signingkey)\"; :"
	l = log --pretty=oneline -n 20 --graph
	# la = !git lh --date-order --all 2> /dev/null
	# last = log -1 HEAD
	# lb = log --graph --simplify-by-decoration
	# lba = !git lb --all
	# lc = show --name-status
	# lg = log -p
	# lh = log --graph
	# lol = log --graph --decorate --pretty=oneline --abbrev-commit
	# lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
	# merge-diff  = "!git diff `git merge-span ... $1`"
	# merge-log   = "!git ls `git merge-span .. $1`"
	# merge-span  = "!f() { echo $(git log -1 $2 --merges --pretty=format:%P | cut -d' ' -f1)$1$(git log -1 $2 --merges --pretty=format:%P | cut -d' ' -f2); }; f"
	# mru = for-each-ref --sort=-committerdate --count=10 refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
	# nm = branch --no-merged
  nuke-branches = !git remote prune origin && git branch -vv | grep ': gone]' | awk '{print $1}' | xargs -r git branch -D

	# overview = "!git log --all --oneline --no-merges"
	# p = push
	new = switch -c
	pf = push --force-with-lease # https://robots.thoughtbot.com/git-push-force-with-lease
	praise = blame
	put = push origin HEAD
	recap = log --all --oneline --no-merges --author=\"John Paul Ashenfelter\"
	recent = for-each-ref --count=10 --sort=-committerdate refs/heads/ --format=\"%(refname:short)\"
	remote = remote -v
	remotes = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
	root = rev-parse --show-toplevel
	s = status
	set-upstream = !git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`
	st = status -sb
	stats = shortlog -sn --all --no-merges
	tags = tag -l
	today = log --since=00:00:00 --all --no-merges --oneline --author=\"John Paul Ashenfelter\"
	uncommit = reset --soft HEAD~1
	undopush = push -f origin HEAD^:master # Undo a `git push`
	unmerge = reset --hard ORIG_HEAD
	unstage = reset HEAD -- # from the source https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases
	upstream = git log --oneline --no-merges HEAD
	wdiff = diff -w --word-diff=color
  # fuse = !git sync && git rebase main
  main = !git checkout main && git pull --no-tags
  sync = !git main && git switch -
	prune-branches = !git remote prune origin && git branch -vv | grep ': gone]' | awk '{print $1}' | xargs -r git branch -d
[branch]
  autoSetupRebase = always
[color]
  pager = true
  ui = true
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  commit = 227 bold
  frag = magenta bold
  meta = 227
  new = green bold
  old = red bold
  whitespace = red reverse
[color "diff-highlight"]
  newHighlight = green bold 22
  newNormal = green bold
  oldHighlight = red bold 52
  oldNormal = red bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[commit]
	gpgsign = true
	template = ~/.gitmessage
#  verbose = true
[core]
	autocrlf = input
	editor = subl --wait
  fsmonitor = true
  hooksPath = ~/.config/git/hooks
  pager = delta
  quotePath = false
  untrackedCache = true
  whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
[credential]
	helper = osxkeychain
	helper = /usr/local/share/gcm-core/git-credential-manager
[credential "https://dev.azure.com"]
	useHttpPath = true
[delta]
  commit-decoration-style = bold yellow box ul
  file-style = bold yellow ul
  hunk-header-decoration-style = yellow box
  line-numbers = true
  minus-color = "#340001"
  plus-color = "#012800"
  side-by-side = true
  whitespace-error-style = 22 reverse
[diff]
  algorithm = histogram
  colorMoved = default
  indentHeuristic = true
  mnemonicPrefix = true
  renames = copies
  tool = Kaleidoscope
[diff "rspec"]
  xfuncname = "^[ \t]*((RSpec|describe|context|it|before|after|around|feature|scenario)[ \t].*)$"
[difftool "Kaleidoscope"]
  cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[fetch]
  prune = true
  pruneTags = true
  writeCommitGraph = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge --skip -- %f
	required = true
	process = git-lfs filter-process --skip
[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[gc]
  cruftPacks = true
[grep]
  column = true
  fullname = true
  lineNumber = true
[format]
  pretty = %Cblue%h%Creset %Cgreen[%ar]%Creset (%an) %s
[github]
	user = johnpaulashenfelter
[gui]
	recentrepo = /Users/johnpaul/work/kwnews/ors
[heroku]
	account = tpoint
# from thoughtbot dotfiles
[init]
	defaultBranch = main
	# templateDir = ~/.config/git/template
[lfs]
	fetchexclude = *
[interactive]
  diffFilter = delta --color-only
  singleKey = true
[maintenance]
  auto = false
  strategy = incremental
[merge]
  conflictStyle = zdiff3
  ff = only
  tool = Kaleidoscope
[mergetool "Kaleidoscope"]
  cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
  trustExitCode = true
[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[pack]
  writeReverseIndex = true
[pull]
	# ff = only
  rebase = merges
[push]
  autoSetupRemote = true
  default = simple
  followTags = true
  useForceIfIncludes = true
[rebase]
  abbreviateCommands = true
  autoSquash = true
  autoStash = true
  updateRefs = true
[rerere]
	enabled = true
	autoUpdate = true
[revert]
  reference = true
[status]
  showUntrackedFiles = all
[tag]
  gpgSign = true
  sort = version:refname
[transfer]
  fsckObjects = true
[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"
  pushInsteadOf = "https://github.com/"
[url "git://github.com/"]
	insteadOf = "github:"
[url "https://github.com/johnpaulashenfelter/"]
  insteadOf = me:
[user]
	email = jp@locushealth.com
	name = John Paul Ashenfelter
	signingkey = 0477A6CC566A09D3
	useConfigOnly = true
[include]
  # For username / creds / etc
  path = ~/.local/config/git
# Conditional work includes
#[includeIf "hasconfig:remote.*.url:https://github.com/WORK_ORGANIZATION/**"]
#  path = ~/work/.config/git-WORK_ORGANIZATION
